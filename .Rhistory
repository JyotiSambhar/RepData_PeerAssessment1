depart<-update(depart,hours=17, minutes=34)
depart
arrive<-depart+hours(15)+ minutes(50)
?with_tz
with_tz(arrive,"Asia/Hong_Kong")
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
quit()
?nlme
?xyplot
?lattice
install.packages("nlme")
install.packages("lattice")
library(nlme)
?nlme
library(nlme)
library(lattice)
R.version()
R.Version()
xyplot(weight ~ Time | Diet, BodyWeight)
?nlme
?points
?panel.lmline
?lines
?text
library(dataset)
install.packages("datasets")
install.packages("datasets")
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?ggplot2
??ggplot2
summary(airquality)
str(airquality)
install.packages("ggplot2)")
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + geom_smooth()
?trellis.par.set
?print.trellis
?par
?splom
quit()
object.size(dataframe(x=1:1304287,y=1:28))
object.size(data.frame(x=1:1304287,y=1:28))
?data.frame
object.size(data.frame(x = 1:5, y = 1:5))
object.size(data.frame(x = 1:1304287, y = 1:28))
object.size(data.frame(x = 1:5, y = 1:28))
object.size(data.frame(x = 1:28, y = 1:28))
data.set
?data.set
?dataset
?matrix
object.size(matrix(1:(1304287*28),nrow=1304287,ncol=28))
x<-4l
x=4L
class(x)
x<-c(4,TRUE)
class(x)
x<-c(1,2,3)
y<-c(4,5,6)
p<-cbind(x,y)
dim(p)
class(p)
class(x)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
quit
exit
quit()
library(swirl)
ls()
rm(list=ls())
swirl()
install_from_swirl("R Programming")
swirl()
5
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
data(cars)
?cars
head(crs)
head(cars)
plot(cars)
?plot()
plot
?plot
plot(x=cars$speed,y=cars$dist)
plot(y=cars$speed,x=cars$dist)
plot(y=cars$speed,x=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance",main="My Plot")
plot(cars,main="My Plot")
plot(cars,sub  "My Plot")
?plot
plot(cars,sub=  "My Plot")
plot(cars,sub=  "My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
)
mtcars
data(mtcars)
?boxplot
boxplot(mpg~cyl,data=mtcars)
hist(mtcars$mpg)
getwd()
ls()
x<=9
x<-9
ls()
list.files()
?list.files
args()
args(list.file)
args(list.files)
old.dir<getwd
old.dir<-getwd()
dir.create(testdir)
dir.create("testdir")
setwd(old.dir+"\testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists(mytest.R)
file.exists("mytest.R")
file.info()
file.info("mytest.R")
file.rename("mytest.R" "mytest2.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2\testdir3")
dir.create(file.path('testdir2','testdir3')
)
dir.create(file.path('testdir2','testdir3'), recursive=TRUE)
unlink("testdir2")
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink(testdir)
unlink("testdir")
unlink("testdir",recursive=TRUE)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
ead(flag_colors)
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4
)
sample(1:20, 10
)
LETTERDS
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips<-sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
lapply(flips=1,sum())
lapply(flips==1,sum)
sum(flips)
?rbinom
rbinom(1, size = 100, prob
= 0.7).
rbinom(1, size = 100, prob
= 0.7)
flips2
flips2<-rbinorm(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5)
rpois(5,10)
replicate(100.rpois(5,10))
replicate(100, rpois(5,10))
my_pois<-replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
ist(cm)
ist(cm)
hist(cm)
quit
exit
quit()
hist(AM)
setwd("C:/Users/dsambhar/Jyoti/Coursera_ReproducibleResearch/PA1")
AMData<-read.csv("activity.csv",header=TRUE,sep=",")
AM<-aggregate(steps~date,AMData,sum)
hist(AM)
hist(AM.steps)
hist(AM$steps)
AM_Mean<-aggregate(steps~date,AMData,mean)
View(AM_Mean)
AM_Mean<-mean(AM$steps)
View(AM_Mean)
AM_Median<-median(AM$steps)
AM_Median
?lm
?hist
?abline
z<-lm(steps~date,data=AM)
abline(z)
hist(AM$steps,main="Steps taken each day")
hist(AM$steps,main="Steps taken each day",xlab="Steps")
hist(AM$steps,main="Total Steps taken each day",xlab="Steps")
AM$date<-as.date(AM$date,%C%Y%M%D)
AM$date<-as.date(AM$date,%C/%Y/%M/%D)
AM$date<-as.date(AM$date,/%C/%Y/%M/%D)
AM$date<-as.date(AM$date,"%C/%Y/%M/%D")
AM$date<-as.Date(AM$date,"%C/%Y/%M/%D")
View(AMData)
plot(steps~date,AM,type="l")
plot(steps~date,AM,xaxt="n",type="l")
plot(steps~date,AM)
plot(AM$steps~AM$date,AM)
AMDaily<-aggregate(steps~interval,AMData,mean)
View(AMDaily)
plot(AMDaily$steps~AMDaily$interval,AMDaily,type="l")
point(Max(AMDaily$steps))
?textxy
?point
?points
points(Max(AMDaily$steps))
points(max(AMDaily$steps))
points(AMDaily[,max(AMDaily$steps)])
points(max(AMDaily$steps,AMDaily$interval))
points(max(AMDaily$steps),AMDaily$interval)
plot(AMDaily$steps~AMDaily$interval,AMDaily,type="l",xlab="5 minute Interval", ylab="Average steps")
AMDaily[,max(steps)]
AMDaily[,max(AMDaily$steps)]
class(AMDaily)
?which
which(AMDaily,max(steps))
which(AMDaily,steps= max(steps))
which(AMDaily,steps== max(steps))
which(AMDaily,ismax(steps))
?ismax
max
?max
?is.max
?big
which.max(AMDaily$steps)
maxim<-which.max(AMDaily$steps)
point(AMDaily[104])
AMDaily[104]
AMDaily[104,interval]
AMDaily[104,1]
AMDaily[104,2]
AMDaily[104,AMDaily$interval]
points(AMDaily[maxim,1],AMDaily[maxim,2])
?points
?pointLabel
?identify
q()
q()
identify(AMDaily[maxim,1],AMDaily[maxim,2],"max # of steps")
?identify
?points
NAVAL<- count(which(is.na(AMData$Steps)))
?sum
NAVAL<- sum(which(is.na(AMData$Steps)))
NAVAL<- sum(which(is.na(AMData$steps)))
naval
NAVAL
is.na(AMData$steps)
NAVAL<-sum(is.na(AMData$steps)==TRUE)
NAVAL
NAVAL<-sum(which(is.na(AMData$steps)==TRUE))
NAVAL
NAVAL<-length(which(is.na(AMData$steps)))
NAVAL
?replace
AMNA<-replace(AMData$steps,is.na(AMData$steps),AMDaily)
AMNA
View(AMNA)
AMNA<-replace(AMData$steps,is.na(AMData$steps),AMDaily$steps)
View(AMNA)
AMData$steps<-replace(AMData$steps,is.na(AMData$steps),AMDaily$steps)
setwd("C:/Users/dsambhar/Jyoti/Coursera_ReproducibleResearch/PA1")
AMData<-read.csv("activity.csv",header=TRUE,sep=",")
AM<-aggregate(steps~date,AMData,sum)
hist(AM$steps,main="Total Steps taken each day",xlab="Steps")
AM_Mean<-mean(AM$steps)
AM_Median<-median(AM$steps)
#AM$date<-as.Date(AM$date,"%C/%Y/%M/%D")
AMDaily<-aggregate(steps~interval,AMData,mean)
#Draw plot
plot(AMDaily$steps~AMDaily$interval,AMDaily,type="l",xlab="5 minute Interval", ylab="Average steps")
#Find maximum steps and point it out on plot
maxim<-which.max(AMDaily$steps)
points(AMDaily[maxim,1],AMDaily[maxim,2])
#No of missing values
NAVAL<-length(which(is.na(AMData$steps)))
#Replace missing values with mean
AM1Data <-AMData
AM1Data$steps<-replace(AM1Data$steps,is.na(AM1Data$steps),AM1Daily$steps)
AM1Data$steps<-replace(AM1Data$steps,is.na(AM1Data$steps),AMDaily$steps)
AMData$steps<-replace(AMData$steps,is.na(AMData$steps),AMDaily$steps)
setwd("C:/Users/dsambhar/Jyoti/Coursera_ReproducibleResearch/PA1")
AMData<-read.csv("activity.csv",header=TRUE,sep=",")
AM<-aggregate(steps~date,AMData,sum)
hist(AM$steps,main="Total Steps taken each day",xlab="Steps")
AM_Mean<-mean(AM$steps)
AM_Median<-median(AM$steps)
#AM$date<-as.Date(AM$date,"%C/%Y/%M/%D")
AMDaily<-aggregate(steps~interval,AMData,mean)
#Draw plot
plot(AMDaily$steps~AMDaily$interval,AMDaily,type="l",xlab="5 minute Interval", ylab="Average steps")
#Find maximum steps and point it out on plot
maxim<-which.max(AMDaily$steps)
points(AMDaily[maxim,1],AMDaily[maxim,2])
#No of missing values
NAVAL<-length(which(is.na(AMData$steps)))
#Replace missing values with mean
AM1Data <-AMData
AM1Data$steps<-replace(AM1Data$steps,is.na(AM1Data$steps),AMDaily$steps)
hist(AM1Data$steps,main="Total Steps taken each day",xlab="Steps")
AM1Data <-AMData
AM1Data$steps<-replace(AM1Data$steps,is.na(AM1Data$steps),AMDaily$steps)
AM1<-aggregate(steps~date,AM1Data,sum)
hist(AM1$steps,main="Total Steps taken each day",xlab="Steps")
AM1_Mean<-mean(AM1$steps)
AM1_Median<-median(AM1$steps)
AM1_Mean
AM_Mean
AM1_Median
AM_Median
View(AM1Data)
View(AM1)
View(AM1)
summary(AM1)
summary(AM)
?mutate
library(plyr)
mutate(AM1Data,weekday=weekdays(date))
class(AM1Data$date)
mutate(AM1Data,weekday=weekdays(as.date(date)))
mutate(AM1Data,weekday=weekdays(as.Date(date)))
?colsplit
?setNames
setNames(0:6,c("Weekend",rep("Weekday",3),"Weekend"))
setNames(0:6,c("Weekend",rep("Weekday",5),"Weekend"))
?as.Factor
?as.Factors
?as.factors
?as.factor
ff<- factor(substring("statistics", 1:10, 1:10), levels = letters))
ff<- factor(substring("statistics", 1:10, 1:10), levels = letters)
ff
as.integer(ff)
f<-factor(ff)
f
ff[,drop=TRUE]
?as.factor
test<-as.factor(weekday(AM1$date),levels=c(0,6))
test<-factor(weekday(AM1$date),levels=c(0,6))
test<-factor(weekdays(AM1$date),levels=c(0,6))
class(AM1$date)
str(AM1$date)
levels(AM1Data$date)<-list((c(0,6)="Weekend",c(1,2,3,4,5)="Weekday"))
?weekdays
?is.weekday
?is
?IS.weekdays
mutate(AM1Data,weekday=as.factor(is.weekdays(as.Date(date))))
mutate(AM1Data,weekday=as.factor(ifelse(weekday( AM1Data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday")))
?weekday
?Weekday
?Weekdays
?weekdays
mutate(AM1Data,weekday=as.factor(ifelse(weekdays(AM1Data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday")))
mutate(AM1Data,weekday=as.factor(ifelse(weekdays(as.Date(AM1Data$date)) %in% c("Saturday","Sunday"), "Weekend", "Weekday")))
View(AM1Data)
View(AM1Data)
AM1Data
View(AM1Data)
head(AM1Data)
mutate(AM1Data,
weekday=as.factor(ifelse(weekdays(as.Date(date)) %in% c("Saturday","Sunday"), "Weekend", "Weekday")))
AM1Data<-mutate(AM1Data,
weekday=as.factor(ifelse(weekdays(as.Date(date)) %in% c("Saturday","Sunday"), "Weekend", "Weekday")))
View(AM1Data)
str(AM1Data)
head(AM1Data)
library(ggplot)
library(ggplot2)
library(lattice)
xyplot(steps~interval|weekday,data=AM1Data, type="l",xlab="Intervals",ylab="No of steps",layout=c(1,2))
summary(AMData$steps)
hist(AM$steps,main="Total Steps taken each day",xlab="Steps")
plot(AMDaily$steps~AMDaily$interval,AMDaily,type="l",xlab="5 minute Interval", ylab="Average steps")
xyplot(steps~interval|weekday,data=AM1Data, type="l",xlab="Intervals",ylab="Number of steps",layout=c(1,2))
AM1Daily<-aggregate(steps~interval,AM1Data,mean)
xyplot(steps~interval|weekday,data=AM1Daily, type="l",xlab="Intervals",ylab="Number of steps",layout=c(1,2))
View(AM1Daily)
?agreegate
?aggregate
AM1Daily<-aggregate(steps~interval+weekday,AM1Data,mean)
View(AM1Daily)
head(AM1Daily)
xyplot(steps~interval|weekday,data=AM1Daily, type="l",xlab="Intervals",ylab="Number of steps",layout=c(1,2))
points(AMDaily[maxim,1],AMDaily[maxim,2],col=red)
points(AMDaily[maxim,1],AMDaily[maxim,2],col="red")
getwd()
?round
class(NAVAL)
NAVAL
AM1_Mean
View(AMData[206])
View(AMData)
View(AMDaily)
maxim
AMDaily[104,]
?knit2html
install.package("knitr")
install.packages("knitr")
install.packages("markdown")
library(knitr)
library(markdown)
?knit2html()
knit2html(input="PA1_template.Rmd", output="PA1_template.html")
setwd("C:/Users/dsambhar/Jyoti/Coursera_ReproducibleResearch/PA1/PA1")
knit2html(input="PA1_template.Rmd", output="PA1_template.html")
knit2html(input="PA1_template.Rmd", output="PA1_template.html")
help hist
?hist
?knit2html
?knit2html
getwd()
knit2html(input="PA1_template.Rmd", output="PA1_template.html")
library(knitr)
markdownHTMLOptions(defaults =TRUE)
knit2html(input="PA1_template.Rmd", output="PA1_template.html", options=c("use_xhtml","smartypants","mathjax","highlight_code"))
?knit2html
library(knitr)
